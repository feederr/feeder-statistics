server:
  port: 8083

spring:

  application.name: 'statistics'
  profiles.active: local

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        dialect: org.hibernate.dialect.MySQL57Dialect
        show_sql: true
        format_sql: true
    open-in-view: false

  datasource:
    name: feeder-statistics-mysql
    url: jdbc:mysql://${datasource.host:localhost}:${datasource.port:3322}/${datasource.schema:statistics}
    username: feeder_statistics
    password: testpwd

  liquibase:
    contexts: ${spring.profiles.active}
    enabled: true

  devtools:
    livereload:
      enabled: false

  kafka:
    listener:
      missing-topics-fatal: false
    bootstrapServers: ${bootstrap.servers:localhost:9092}
    consumer:
      group-id: ${spring.application.name}
    producer:
      keySerializer: org.apache.kafka.common.serialization.StringSerializer
      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer

security:
  oauth2:
    resource:
      jwt:
        key-value: local_signing_key

feeder:
  kafka:
    topics:
      item-viewed: communication-item-viewed
      item-removed: communication-item-removed
      channel-subscribed: communication-channel-subscribed
      channel-unsubscribed: communication-channel-unsubscribed
      channel-removed: communication-channel-removed
    enabled: true
  security:
    hierarchy.authorityPattern: >
      *:client-admin > *:client-delete > *:client-write > *:client-read
      *:admin > *:delete > *:write > *:read

logging:
  level:
    org.feeder: DEBUG
    org.springframework: WARN
    org.hibernate: WARN
    liquibase: WARN
    org.apache.kafka: WARN
